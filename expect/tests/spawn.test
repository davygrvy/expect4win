# Commands covered:  spawn
#
# This file contains a collection of tests for one or more of the Tcl
# built-in commands.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2.1
    namespace import -force ::tcltest::test
}

::tcltest::loadTestedCommands
exp_log_user 0
#exp_internal 1

test spawn-1.1 {basic spawn operation} {unixExecs} {
	set x [catch {exp_spawn cat}]
	set first_spawn_id $spawn_id; # save for later test
	exp_close;exp_wait
	set x
} {0}

test spawn-1.2 {spawn cat, then simple send/expect sequence} {unixExecs} {
    set cat [exp_spawn -noecho cat -u]
    exp_send "a\r"
    expect "a" {set x 1} timeout {set x 0}
    exp_close;exp_wait
    set x
} {1}

test spawn-1.3 {spawn two processes simultaneously} {unixExecs} {
    exp_spawn -noecho cat; set cat $spawn_id
    exp_spawn -noecho cat; set cat2 $spawn_id
    set x [expr {0!=[string compare [exp_pid -i $cat2] [exp_pid -i $cat]]}]
    exp_close -i $cat;exp_wait -i $cat;exp_close -i $cat2;exp_wait -i $cat2
    set x
} {1}

test spawn-1.4 {spawn open file} -setup {
	set x 0
	set y 0
	set filename [file normalize [pid]]
	set contents {testing expect's spawn -open}
	::tcltest::makeFile $contents $filename
} -body {
	set timeout 10
	set pid [exp_spawn -open [open $filename]]
	expect $contents {set x 1}
	expect eof {set y 1}
	exp_wait
	list $x $y $pid
} -cleanup {
	::tcltest::removeFile [pid]
} -result {1 1 0}

test spawn-1.5 {spawn with no fd leak} {unixExecs} {
	exp_spawn cat
	set x [expr {"$first_spawn_id"=="$spawn_id"}]
	exp_close; exp_wait
	set x
} {1}	

# looks to be some control-char problem
#ftest spawn-1.6 {spawn with echo} {unixExecs} {
#	exp_spawn cat
#} {spawn cat}
	
#ftest spawn-1.7 {spawn with -noecho} {unixExecs} {
#	exp_spawn -noecho cat
#} {}

::tcltest::cleanupTests
return
